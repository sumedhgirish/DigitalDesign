$date
	Sat Aug 30 13:43:52 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! mux_out $end
$var wire 1 " mux4_out $end
$var wire 1 # enc_out $end
$var wire 2 $ enc4_out [1:0] $end
$var wire 2 % demux_out [1:0] $end
$var wire 4 & demux4_out [3:0] $end
$var wire 2 ' dec_out [1:0] $end
$var wire 4 ( dec4_out [3:0] $end
$var reg 1 ) dec4_ena $end
$var reg 2 * dec4_inp [1:0] $end
$var reg 1 + dec_ena $end
$var reg 1 , dec_inp $end
$var reg 1 - demux4_in $end
$var reg 2 . demux4_sel [1:0] $end
$var reg 1 / demux_in $end
$var reg 1 0 demux_sel $end
$var reg 1 1 enc4_enable $end
$var reg 4 2 enc4_in [3:0] $end
$var reg 1 3 enc_enable $end
$var reg 2 4 enc_in [1:0] $end
$var reg 4 5 mux4_in [3:0] $end
$var reg 2 6 mux4_sel [1:0] $end
$var reg 2 7 mux_in [1:0] $end
$var reg 1 8 mux_sel $end
$scope module U0 $end
$var wire 2 9 in [1:0] $end
$var wire 1 8 sel $end
$var wire 1 ! out $end
$upscope $end
$scope module U1 $end
$var wire 4 : in [3:0] $end
$var wire 2 ; sel [1:0] $end
$var wire 1 " out $end
$var wire 1 < med2 $end
$var wire 1 = med1 $end
$scope module U0 $end
$var wire 2 > in [1:0] $end
$var wire 1 ? sel $end
$var wire 1 = out $end
$upscope $end
$scope module U1 $end
$var wire 2 @ in [1:0] $end
$var wire 1 A sel $end
$var wire 1 < out $end
$upscope $end
$scope module U3 $end
$var wire 2 B in [1:0] $end
$var wire 1 C sel $end
$var wire 1 " out $end
$upscope $end
$upscope $end
$scope module U2 $end
$var wire 1 / in $end
$var wire 1 0 sel $end
$var wire 2 D out [1:0] $end
$upscope $end
$scope module U3 $end
$var wire 1 - in $end
$var wire 2 E sel [1:0] $end
$var wire 4 F out [3:0] $end
$upscope $end
$scope module U4 $end
$var wire 1 3 enable $end
$var wire 2 G in [1:0] $end
$var wire 1 # out $end
$upscope $end
$scope module U5 $end
$var wire 1 1 enable $end
$var wire 4 H in [3:0] $end
$var wire 2 I out [1:0] $end
$upscope $end
$scope module U6 $end
$var wire 1 + enable $end
$var wire 1 , sel $end
$var wire 2 J out [1:0] $end
$var wire 2 K med [1:0] $end
$upscope $end
$scope module U7 $end
$var wire 1 ) enable $end
$var wire 2 L sel [1:0] $end
$var wire 4 M out [3:0] $end
$var wire 4 N med [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
xC
bx B
xA
bx @
x?
bx >
x=
x<
bx ;
bx :
b0 9
08
b0 7
bx 6
bx 5
bx 4
x3
bx 2
x1
x0
x/
bx .
x-
x,
x+
bx *
x)
bx (
bx '
bx &
bx %
bx $
x#
x"
0!
$end
#5
18
#10
1!
b1 7
b1 9
08
#15
0!
18
#20
b10 7
b10 9
0!
08
#25
1!
18
#30
b11 7
b11 9
1!
08
#35
18
#40
0"
0=
0?
b0 B
0<
0A
0C
b0 >
b0 @
b0 6
b0 ;
b0 5
b0 :
#45
1"
b1 B
1=
b1 >
b1 5
b1 :
#50
b11 >
b1 @
1"
b1 B
1=
1?
1A
b111 5
b111 :
b1 6
b1 ;
#55
b10 @
0?
b1 B
0<
0A
0"
1C
b1011 5
b1011 :
b10 6
b10 ;
#60
0=
b0 >
b1 @
1?
0"
b0 B
0<
1A
b100 5
b100 :
b11 6
b11 ;
#65
1"
1=
b1 >
0?
b11 B
1<
0A
0C
b101 5
b101 :
b0 6
b0 ;
#70
b10 >
b11 @
1"
1=
1?
b11 B
1<
1A
b1110 5
b1110 :
b1 6
b1 ;
#75
b11 >
b1 @
b11 B
1=
0?
0A
1C
b111 5
b111 :
b10 6
b10 ;
#80
0/
b0 %
b0 D
00
#85
10
#90
b1 %
b1 D
1/
00
#95
b10 %
b10 D
10
#100
b0 &
b0 F
0-
b0 .
b0 E
#105
b1 .
b1 E
#110
b10 .
b10 E
#115
b11 .
b11 E
#120
b1 &
b1 F
1-
b0 .
b0 E
#125
b10 &
b10 F
b1 .
b1 E
#130
b100 &
b100 F
b10 .
b10 E
#135
b1000 &
b1000 F
b11 .
b11 E
#140
z#
03
#145
0#
13
b1 4
b1 G
#150
1#
b10 4
b10 G
#155
bz $
bz I
01
#160
b0 $
b0 I
11
b1 2
b1 H
#165
b1 $
b1 I
b10 2
b10 H
#170
b10 $
b10 I
b100 2
b100 H
#175
b11 $
b11 I
b1000 2
b1000 H
#180
bz '
bz J
0+
#185
b1 K
b1 '
b1 J
1+
0,
#190
b10 '
b10 J
b10 K
1,
#195
bz (
bz M
0)
#200
b1 N
b1 (
b1 M
1)
b0 *
b0 L
#205
b10 (
b10 M
b10 N
b1 *
b1 L
#210
b100 (
b100 M
b100 N
b10 *
b10 L
#215
b1000 (
b1000 M
b1000 N
b11 *
b11 L
#245
